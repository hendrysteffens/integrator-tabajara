/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package integrator.generator

import integrator.generator.generator.generateDto
import integrator.generator.generator.generateWorkflow
import integrator.generator.sdl.ExtractSdlData
import integrator.generator.tbs.TbsDataExtractor
import integrator.generator.template.DtoTemplate
import integrator.generator.template.WorkflowTemplate
import integrator.generator.util.FileGenerator
import java.io.File
import java.nio.file.Paths
import java.util.*

class App {
    companion object {
        private var loaded = false
        private val _props = Properties()
        val props: Properties
            get() {
                if (!loaded) {
                    _props.load(javaClass.getResourceAsStream("/generator.properties"))
                    loaded = true
                }
                return _props
            }

        private val entity: String
            get() {
                return ExtractSdlData(props).getSdlEntityText();
            }

        fun run(args: Array<String>) {

            if (args.isNotEmpty()) {
                props.setProperty("integrator.entity", args[0])
            }

            if (File("main.sdl").exists()) {
                props.setProperty("integrator.backend.location", Paths.get("").toAbsolutePath().toString())
            }

            val extractedData = ExtractSdlData(props).extractData(entity)
            extractedData.second.forEach {
                fields -> println(fields)
            }
            println(generateDto(extractedData, DtoTemplate().templateString));

            TbsDataExtractor(props).extractTbsData()?.let{
                FileGenerator().createFileByNameAndText(
                    props.getProperty("integrator.entity"),
                    extractedData.first+"Workflow.java",
                    generateWorkflow(it, extractedData.first.toString(), WorkflowTemplate().templateString, extractedData.second)
                )
            }

            FileGenerator().createFileByNameAndText(props.getProperty("integrator.entity"), extractedData.first+"Dto.java", generateDto(extractedData, DtoTemplate().templateString))

        }
    }
}

fun main(args: Array<String>) {
    App.run(args)
}

