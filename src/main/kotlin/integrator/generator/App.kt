/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package integrator.generator

import integrator.generator.dto.Field
import integrator.generator.dto.ValidationTypeTemplate
import integrator.generator.dto.ValidationType
import integrator.generator.sdl.ExtractSdlData
import integrator.generator.tbs.TbsDataExtractor
import integrator.generator.template.DtoTemplate
import integrator.generator.util.*
import java.io.FileInputStream
import java.util.*

class App {
    val entity: String
        get() {
            return "\"Evento da folha de pagamento (R034EVT)\"\n" +
                    "        custom public entity wagetype {\n" +
                    "            \"Id do evento\"\n" +
                    "            id : string ( 32 )\n" +
                    "            \"Relacionamento com tabelas de eventos\"\n" +
                    "            wageTypeTable : wageTypeTable\n" +
                    "            \"Código do evento\"\n" +
                    "            code : integer\n" +
                    "            \"Descrição do evento\"\n" +
                    "            name : string\n" +
                    "            \"Tipo de valor do evento\"\n" +
                    "            wageValueType : wageValueType\n" +
                    "            \"Tipo do evento\"\n" +
                    "            type : wageTypeCategory\n" +
                    "            \"Categoria do Evento\"\n" +
                    "            characteristic : wageTypeCharacteristic\n" +
                    "            \"Data de criação\"\n" +
                    "            creationdate : date?\n" +
                    "            \"Data de extinção\"\n" +
                    "            expirationdate : date?\n" +
                    "            \"Identificador do sindicato do da contribuição sindical\"\n" +
                    "            syndicate : string ( 32 )?\n" +
                    "        }"
        }

    fun getResouce() :String{
        return this.javaClass.classLoader.getResource("generator.properties").file;
    }
}

fun main(args: Array<String>) {

    val props = Properties()
    props.load(FileInputStream(App().getResouce()))
    props.getProperty("sdl.path")
    println(props.getProperty("sdl.path"))

    ExtractSdlData.extractData(App().entity).second.forEach {
        fields -> println(fields)
    }
    println(generateDto(ExtractSdlData.extractData(App().entity), DtoTemplate().templateString));

    TbsDataExtractor.extractTbsData(props, "R034FUN")
    FileGenerator().createFileByNameAndText("test.java", "teste")
}



fun generateDto(extractData: Pair<String?, List<Field>>, templateString: String): String {
    var bodyTemplate = "";
    extractData.second.forEach { field ->
        field.validations?.forEach {
            when(it.key) {
                ValidationType.REQUIRED -> {
                    bodyTemplate += getValidationStringWithField(ValidationTypeTemplate.NOT_EMPTY.value, field.name)
                    bodyTemplate += getValidationStringWithField(ValidationTypeTemplate.NOT_NULL.value, field.name);
                }
                ValidationType.MAX -> {
                    bodyTemplate += getValidationStringWithField(ValidationTypeTemplate.MAX.value, field.name)
                }
                ValidationType.MIN -> {
                    bodyTemplate += getValidationStringWithField(ValidationTypeTemplate.MIN.value, field.name)
                }
                ValidationType.DATE -> {
                    bodyTemplate += getValidationStringWithField(ValidationTypeTemplate.LOCAL_DATE_RAGE.value, field.name)
                }
            }
        }
        if(field.type.equals("LocalDate")){
            field.type = "String";
        }
        var type = field.type.trim().substring(0,1).toUpperCase().plus(field.type.trim().substring(1));

        bodyTemplate += "private "+type+" "+field.name+"\n\n";
    }
    return bodyTemplate;
}

fun getValidationStringWithField(rowValidator: String, field: String): String {
    return rowValidator.replace("{{field}}", field)
}
